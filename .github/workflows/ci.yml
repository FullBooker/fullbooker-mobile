name: Fullbooker CI/CD Workflow

on:
  push:
    branches:
      - develop

jobs:
  deploy_to_app_tester:
    name: Deploy Fullbooker to AppTester
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: "stable"

      - name: Set up Android credentials
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Create key.properties file
        run: |
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Build signed release APK
        run: |
          flutter build apk \
            --release \
            --obfuscate \
            --split-debug-info=dump/ \
            --build-number=${{ github.run_number }} \
            --build-name=1.0.${{ github.run_number }}-dev \
            --dart-define=APPVERSION=1.0.${{ github.run_number }}-dev \
            --dart-define=ENV=DEV

      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_AUTH_TOKEN }}
          groups: dev-testers
          file: build/app/outputs/flutter-apk/app-release.apk

  deploy_to_play_store:
    name: Build AAB and Deploy to Google Play Store
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: "stable"

      - name: Set up Android credentials
        run: |
          mkdir -p android/app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Create key.properties file
        run: |
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Build release AAB
        run: |
          flutter build appbundle \
            --release \
            --obfuscate \
            --split-debug-info=dump/ \
            --build-number=${{ github.run_number }} \
            --build-name=1.0.${{ github.run_number }}-prod \
            --dart-define=APPVERSION=1.0.${{ github.run_number }}-prod \
            --dart-define=ENV=PROD

      - name: Deploy AAB to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.fullbooker.fullbooker
          releaseFile: build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
